#!/bin/bash

LXC_HOME=/var/lib/lxc
RF_HOME=$HOME/RouteFlow-New-Architecture
LOG_FILE=/var/log/rf-first-network.log

if [ "$EUID" != "0" ]; then
  echo "You must be root to run that. Sorry, dude!"
  exit 1
fi

export PATH=$PATH:/usr/local/bin:/usr/local/sbin
cd $RF_HOME &> $LOG_FILE

echo "Resetting and stopping LXC VMs..."
rm -f $LXC_HOME/rfvmA/rootfs/var/run/network/ifstate &>> $LOG_FILE
rm -f $LXC_HOME/rfvmB/rootfs/var/run/network/ifstate &>> $LOG_FILE
rm -f $LXC_HOME/rfvmC/rootfs/var/run/network/ifstate &>> $LOG_FILE
rm -f $LXC_HOME/rfvmD/rootfs/var/run/network/ifstate &>> $LOG_FILE

lxc-stop -n rfvmA &>> $LOG_FILE
lxc-stop -n rfvmB &>> $LOG_FILE
lxc-stop -n rfvmC &>> $LOG_FILE
lxc-stop -n rfvmD &>> $LOG_FILE

echo "Stopping any running instances and data of rf-server, NOX, OVS and MongoDB..."
pkill -15 rf-server &> /dev/null
pkill -15 lt-nox_core &> /dev/null
pkill -15 ovs-openflowd &> /dev/null
pkill -15 mongod &> /dev/null
rm -r $HOME/db &>> $LOG_FILE
rm -r /var/lib/lxc/rfvmA/rootfs/opt/rf-slave
rm -r /var/lib/lxc/rfvmB/rootfs/opt/rf-slave
rm -r /var/lib/lxc/rfvmC/rootfs/opt/rf-slave
rm -r /var/lib/lxc/rfvmD/rootfs/opt/rf-slave

if [ "$1" != "clear" ]; then
    echo "Starting MongoDB..."
    mkdir $HOME/db &>> $LOG_FILE
    mongod --quiet --dbpath $HOME/db --logpath /dev/null &
    sleep 3

    echo "Starting the virtual routers..."
    mkdir /var/lib/lxc/rfvmA/rootfs/opt/rf-slave &>> $LOG_FILE
    mkdir /var/lib/lxc/rfvmB/rootfs/opt/rf-slave &>> $LOG_FILE
    mkdir /var/lib/lxc/rfvmC/rootfs/opt/rf-slave &>> $LOG_FILE
    mkdir /var/lib/lxc/rfvmD/rootfs/opt/rf-slave &>> $LOG_FILE
    
    cp build/rf-slave /var/lib/lxc/rfvmA/rootfs/opt/rf-slave/rf-slave &>> $LOG_FILE
    cp build/rf-slave /var/lib/lxc/rfvmB/rootfs/opt/rf-slave/rf-slave &>> $LOG_FILE
    cp build/rf-slave /var/lib/lxc/rfvmC/rootfs/opt/rf-slave/rf-slave &>> $LOG_FILE
    cp build/rf-slave /var/lib/lxc/rfvmD/rootfs/opt/rf-slave/rf-slave &>> $LOG_FILE
    
    cp test.in /var/lib/lxc/rfvmA/rootfs/opt/rf-slave &>> $LOG_FILE
    cp test.in /var/lib/lxc/rfvmB/rootfs/opt/rf-slave &>> $LOG_FILE
    cp test.in /var/lib/lxc/rfvmC/rootfs/opt/rf-slave &>> $LOG_FILE
    cp test.in /var/lib/lxc/rfvmD/rootfs/opt/rf-slave &>> $LOG_FILE
    
    # We need to start the VMs with different sleep times to guarantee their order.
    # This is a known Routeflow limitation, and we plan to eliminate it in the future.
    echo "#!/bin/sh" > /var/lib/lxc/rfvmA/rootfs/root/run_rfslave.sh
    echo "sleep 5" >> /var/lib/lxc/rfvmA/rootfs/root/run_rfslave.sh
    echo "/etc/init.d/quagga start" >> /var/lib/lxc/rfvmA/rootfs/root/run_rfslave.sh
    echo "/opt/rf-slave/rf-slave > /var/log/rf-slave.log" >> /var/lib/lxc/rfvmA/rootfs/root/run_rfslave.sh
    
    echo "#!/bin/sh" > /var/lib/lxc/rfvmB/rootfs/root/run_rfslave.sh
    echo "sleep 10" >> /var/lib/lxc/rfvmB/rootfs/root/run_rfslave.sh
    echo "/etc/init.d/quagga start" >> /var/lib/lxc/rfvmB/rootfs/root/run_rfslave.sh
    echo "/opt/rf-slave/rf-slave > /var/log/rf-slave.log" >> /var/lib/lxc/rfvmB/rootfs/root/run_rfslave.sh
    
    echo "#!/bin/sh" > /var/lib/lxc/rfvmC/rootfs/root/run_rfslave.sh
    echo "sleep 15" >> /var/lib/lxc/rfvmC/rootfs/root/run_rfslave.sh
    echo "/etc/init.d/quagga start" >> /var/lib/lxc/rfvmC/rootfs/root/run_rfslave.sh
    echo "/opt/rf-slave/rf-slave > /var/log/rf-slave.log" >> /var/lib/lxc/rfvmC/rootfs/root/run_rfslave.sh
    
    echo "#!/bin/sh" > /var/lib/lxc/rfvmD/rootfs/root/run_rfslave.sh
    echo "sleep 20" >> /var/lib/lxc/rfvmD/rootfs/root/run_rfslave.sh
    echo "/etc/init.d/quagga start" >> /var/lib/lxc/rfvmD/rootfs/root/run_rfslave.sh
    echo "/opt/rf-slave/rf-slave > /var/log/rf-slave.log" >> /var/lib/lxc/rfvmD/rootfs/root/run_rfslave.sh
                
    chmod +x /var/lib/lxc/rfvmA/rootfs/root/run_rfslave.sh
    chmod +x /var/lib/lxc/rfvmB/rootfs/root/run_rfslave.sh
    chmod +x /var/lib/lxc/rfvmC/rootfs/root/run_rfslave.sh
    chmod +x /var/lib/lxc/rfvmD/rootfs/root/run_rfslave.sh
                
    lxc-start -n rfvmA -d &>> $LOG_FILE
    lxc-start -n rfvmB -d &>> $LOG_FILE
    lxc-start -n rfvmC -d &>> $LOG_FILE
    lxc-start -n rfvmD -d &>> $LOG_FILE
    
    echo "Starting the management network (br0)..."
    ( cd rf-controller/build/src && ./nox_core -i ptcp:6363 switch -d ) &>> $LOG_FILE
    sleep 3
    ovs-openflowd br0 tcp:127.0.0.1:6363 --out-of-band --detach --ports=rfvmA.0,rfvmB.0,rfvmC.0,rfvmD.0 &>> $LOG_FILE
    ifconfig br0 up
    ifconfig br0 192.169.1.1

    echo "Starting NOX + the RouteFlow network controller..."
    ( cd rf-controller/build/src && ./nox_core -i ptcp:6633 switchstats routeflowc topology --verbose="routeflowc:ANY:INFO" &>> $LOG_FILE & )
    # ( cd rf-controller/build/src && ./nox_core -i ptcp:6633 routeflowc -v &>> $LOG_FILE & )  
    sleep 3
    
    echo "Starting the RouteFlow server..."
    build/rf-server &>> $LOG_FILE &
    sleep 3
    
    echo "Starting the control plane network (dp0 OVS)..."
    ovs-openflowd --hw-desc=rfovs dp0 tcp:127.0.0.1:6633 --out-of-band --detach \
    --ports=rfvmA.1,rfvmA.2,rfvmA.3,rfvmA.4,rfvmB.1,rfvmB.2,rfvmB.3,rfvmC.1,rfvmC.2,rfvmC.3,rfvmD.1,rfvmD.2,rfvmD.3,rfvmD.4 &>> $LOG_FILE
    ifconfig dp0 up
    sleep 3
    
    cd - &> /dev/null
    
    sleep 8
    echo "Done! Thanks for trying RouteFlow!"
fi

exit 0

