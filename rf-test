#!/bin/bash

LXC_HOME=/var/lib/lxc
RF_HOME=$HOME/RouteFlow-New-Architecture
LOG_FILE=/var/log/rf-first-network.log

if [ "$EUID" != "0" ]; then
  echo "You must be root to run that. Sorry, dude!"
  exit 1
fi

export PATH=$PATH:/usr/local/bin:/usr/local/sbin
cd $RF_HOME &> $LOG_FILE

echo "Reseting and stopping LXC VMs..."
rm -f $LXC_HOME/{rfvm1,b1,b2}/rootfs/var/run/network/ifstate &>> $LOG_FILE
lxc-stop -n b2 &>> $LOG_FILE
lxc-stop -n b1 &>> $LOG_FILE
lxc-stop -n rfvm1 &>> $LOG_FILE

echo "Stopping any running instances and data of rf-server, NOX, OVS and MongoDB..."
pkill -15 rf-server &> /dev/null
pkill -15 lt-nox_core &> /dev/null
pkill -15 ovs-openflowd &> /dev/null
pkill -15 mongod &> /dev/null
rm -r $HOME/db &>> $LOG_FILE
rm -r /var/lib/lxc/rfvm1/rootfs/opt/rf-slave

if [ "$1" != "clear" ]; then
    echo "Starting MongoDB..."
    mkdir $HOME/db &>> $LOG_FILE
    mongod --quiet --dbpath $HOME/db --logpath /dev/null &
    sleep 5

    echo "Starting the rfvm1 virtual router..."
    mkdir /var/lib/lxc/rfvm1/rootfs/opt/rf-slave &>> $LOG_FILE
    cp build/rf-slave /var/lib/lxc/rfvm1/rootfs/opt/rf-slave/rf-slave &>> $LOG_FILE
    cp test.in /var/lib/lxc/rfvm1/rootfs/opt/rf-slave &>> $LOG_FILE
    
    echo "#!/bin/sh" > /var/lib/lxc/rfvm1/rootfs/root/run_rfslave.sh
    echo "sleep 15" >> /var/lib/lxc/rfvm1/rootfs/root/run_rfslave.sh
    echo "/opt/rf-slave/rf-slave > /var/log/rf-slave.log" >> /var/lib/lxc/rfvm1/rootfs/root/run_rfslave.sh
    chmod +x /var/lib/lxc/rfvm1/rootfs/root/run_rfslave.sh
    
    lxc-start -n rfvm1 -d &>> $LOG_FILE
    
    echo "Starting the management network (br0)..."
    ( cd rf-controller/build/src && ./nox_core -v -i ptcp:6363 switch -d ) &>> $LOG_FILE
    sleep 3
    ovs-openflowd br0 tcp:127.0.0.1:6363 --out-of-band --detach --ports=rfvm1.0 &>> $LOG_FILE
    ifconfig br0 up
    ifconfig br0 192.169.1.1

    echo "Starting NOX + the RouteFlow network controller..."
    ( cd rf-controller/build/src && ./nox_core -v -i ptcp:6633 routeflowc &>> $LOG_FILE & ) 
    sleep 3
    echo "Starting the RouteFlow server..."
    build/rf-server &>> $LOG_FILE &

    echo "Starting the control plane network (dp0 OVS)..."
    ovs-openflowd --hw-desc=rfovs dp0 tcp:127.0.0.1:6633 --out-of-band --detach --ports=rfvm1.1,rfvm1.2  &>> $LOG_FILE
    sleep 3

    echo "Starting the sample network..."
    lxc-start -n b1 -d &>> $LOG_FILE
    lxc-start -n b2 -d &>> $LOG_FILE
    ovs-openflowd switch1 tcp:127.0.0.1:6633 --out-of-band --ports=b1.0,b2.0 --detach &>> $LOG_FILE

    cd - &> /dev/null

    echo "Done! Thanks for trying RouteFlow!"

    # TODO: ping b2 from b1 and show result in stdout
    # We need -t in ssh to simulate a tty for ping
    # ssh -t root@192.169.100.30 ping 192.169.100.1
    echo "We should be pinging here..."
fi

exit 0

